<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_temp_Teagan_still_Down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
image_speed = 0.2;

//direction value from 0- 3
/*
    0 = down
    1 = left
    2 = up
    3 = right
*/
card_direction = 0;

//moving state
/*
    0 = not moving (standing still)
    1 = moving (key being pressed)
*/
moving = 0;

locked = false;

phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle sprite directions and movement
depth = phy_position_y * -1;
//check if keys are pressed and change direction
if(locked == false)
{
    if(keyboard_check(vk_left))
    {
        card_direction = 1;
        moving = 1;
    }   
    else if (keyboard_check(vk_down))
    {
        card_direction = 0;
        moving = 1;
    }
    else if (keyboard_check(vk_up))
    {
        card_direction = 2;
        moving = 1;
    }

    else if (keyboard_check(vk_right))
    {
        card_direction = 3;
        moving = 1; 
    }
    else
    {
        moving = 0;
}   
//if not moving
//check direction and set sprite accordingly
if(moving == 0)
{
    if(card_direction == 0)         //facing down
    {
        sprite_index = spr_temp_Teagan_still_Down;
    }
    
    else if (card_direction == 1)  //facing left
    {
        sprite_index = spr_temp_Teagan_still_Left;
    }
    
    else if (card_direction == 2)   //facing up
    {
        sprite_index = spr_temp_Teagan_still_Up;
    }
    
    else if (card_direction == 3)   //facing right
    {
        sprite_index = spr_temp_Teagan_still_Right;
    }
}

else            //moving = 1, key being pressed
{
    scr_encounter_random(obj_enemy);
    if(card_direction == 0)         //facing down
    {
        sprite_index = spr_temp_Teagan_Down;
        phy_position_y += 2;
    }
    
    else if (card_direction == 1)  //facing left
    {
        sprite_index = spr_temp_Teagan_left;
        phy_position_x -= 2;
    }
    
    else if (card_direction == 2)   //facing up
    {
        sprite_index = spr_temp_Teagan_Up;
        phy_position_y -= 2;
    }
    
    else if (card_direction == 3)   //facing right
    {
        sprite_index = spr_temp_Teagan_Right;
        phy_position_x += 2;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="collidable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,32</point>
    <point>24,32</point>
    <point>24,56</point>
    <point>8,56</point>
  </PhysicsShapePoints>
</object>
